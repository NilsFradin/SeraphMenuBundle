<div>
    <button id="fake_submit" class="btn btn-sm btn-outline-gray-600" type="submit">
        Validate tree
    </button>
</div>
<form id="organize" action="{{ path('seraph-editOrganize-menuItem', {'id' : menu.id}) }}" method="post">
    <table id="table-tree" class="table table-responsive-sm table-bordered table-striped table-sm">
        <thead>
        <tr>
            <th>Title</th>
            <th class="tabledrag-hide">Order</th>
            <th class="tabledrag-hide">Parent</th>
            <th class="text-center">Actions</th>
        </tr>
        </thead>
        <tbody>
        {% for form in forms %}
            <tr class="draggable">
                <td>
                    <a href="?elem={{ form.vars.data.id }}">{{ form.vars.data.title }}</a>
                    {{ form_widget(form.id,{"attr":{"class":"item-id hidden"}}) }}
                    {{ form_widget(form.depth,{"attr":{"class":"item-depth hidden"}}) }}
                </td>
                <td class="tabledrag-hide">{{ form_widget(form.position,{"attr":{"class":"item-position form-control"}}) }}</td>
                <td class="tabledrag-hide">{{ form_widget(form.parent,{"attr":{"class":"item-parent form-control"}}) }}</td>
                <td class="txt-center">
                    <a href="{{ path('seraph-edit-menuItem', {'id_menu' : menu.id,"id_menuitem" :  form.vars.data.id}) }}" class="pad-right-plus">Edit</a>
                    <a href="{{ path('seraph-delete-menuItem', {'id_menu' : menu.id,"id_menuitem" :  form.vars.data.id}) }}" class="color-red">Delete</a>
                </td>
            </tr>

        {% else %}
            <tr>
                <td>{{ 'general.no-result'|trans({}, 'messages') }}</td>
                <td></td>
                <td class="tabledrag-hide"></td>
                <td class="tabledrag-hide"></td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</form>

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.2/jquery.cookie.min.js"></script>
    <script type="text/javascript" src="{{ asset('assets/js/jquery.tabledrag.js') }}"></script>
    <script type="text/javascript">
        $("#table-tree").tableDrag(
            {
                // General options.
                // The <tr> class indicating that it's draggable.
                draggableClass: 'draggable',
                // The path for the cookie flag. A link is displayed which allows users
                // to switch between the drag and drop interface or the "plain" interface.
                cookiePath: '/',
                // Specific options.
                // The weight option allows elements to be sorted.
                // Pass a "falsy" value to fieldClass to deactivate (false, null, undefined, etc).
                weight: {
                    // The class of the <select> list. Weights will be deduced by the <option>s in this list.
                    // <option> values should be integers.
                    fieldClass: 'item-position',
                    // Hides the <select>s parent <td> for better usability.
                    hidden: true
                },
                // The parent option allows elements to be children of one another.
                // Pass a "falsy" value to fieldClass to deactivate.
                // To allow the child-parent relationship to function correctly, each row must contain an input
                // with the class defined in sourceFieldClass wich represents the current row.
                // This can be a hidden input.
                parent: {
                    // The class of the field containing the "parent" id. Can be any form item.
                    fieldClass: 'item-parent',
                    // The class of the field containing the current "row" id. Can be any form item.
                    sourceFieldClass: 'item-id',
                    // Hides the parent <td> of the "parent" field for better usability.
                    hidden: true
                },
                // The group option allows elements to be dragged with their children as a whole.
                // This is usually what you want.
                // It's related to parent and can only function with it.
                // Pass a "falsy" value to fieldClass to deactivate.
                group: {
                    // The class of the field containing the row "depth". Can be any form item.
                    fieldClass: 'item-depth',
                    // The depth limit to which items can be nested and dragged as a group.
                    depthLimit: 3
                }
            }
        );
        var submit_button = $("#fake_submit");
        $(document).bind('tabledrag:droprow', function() {
            submit_button.removeClass("btn-outline-gray-600");
            submit_button.addClass("btn-outline-success");
        });
        submit_button.click(function() {
            $("form#organize").submit();
        });
    </script>
{% endblock %}